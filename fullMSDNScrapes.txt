GetStdHandle-HANDLE WINAPI GetStdHandle(
  _In_ DWORD nStdHandle
);

SetConsoleTextAttribute-BOOL WINAPI SetConsoleTextAttribute(
  _In_ HANDLE hConsoleOutput,
  _In_ WORD   wAttributes
);

DeleteCriticalSection-void DeleteCriticalSection(
  [in, out] LPCRITICAL_SECTION lpCriticalSection
);

EncodePointer-PVOID EncodePointer(
  _In_ PVOID Ptr
);

InitializeCriticalSectionAndSpinCount-BOOL InitializeCriticalSectionAndSpinCount(
  [out] LPCRITICAL_SECTION lpCriticalSection,
  [in]  DWORD              dwSpinCount
);

SwitchToThread-BOOL SwitchToThread();

TlsAlloc-DWORD TlsAlloc();

TlsGetValue-LPVOID TlsGetValue(
  [in] DWORD dwTlsIndex
);

TlsSetValue-BOOL TlsSetValue(
  [in]           DWORD  dwTlsIndex,
  [in, optional] LPVOID lpTlsValue
);

TlsFree-BOOL TlsFree(
  [in] DWORD dwTlsIndex
);

GetSystemTimeAsFileTime-void GetSystemTimeAsFileTime(
  [out] LPFILETIME lpSystemTimeAsFileTime
);

CompareStringW-int CompareStringW(
  [in] LCID                              Locale,
  [in] DWORD                             dwCmpFlags,
  [in] _In_NLS_string_(cchCount1)PCNZWCH lpString1,
  [in] int                               cchCount1,
  [in] _In_NLS_string_(cchCount2)PCNZWCH lpString2,
  [in] int                               cchCount2
);

LCMapStringW-int LCMapStringW(
  [in]            LCID    Locale,
  [in]            DWORD   dwMapFlags,
  [in]            LPCWSTR lpSrcStr,
  [in]            int     cchSrc,
  [out, optional] LPWSTR  lpDestStr,
  [in]            int     cchDest
);

GetLocaleInfoW-int GetLocaleInfoW(
  [in]            LCID   Locale,
  [in]            LCTYPE LCType,
  [out, optional] LPWSTR lpLCData,
  [in]            int    cchData
);

GetStringTypeW-BOOL GetStringTypeW(
  [in]  DWORD                         dwInfoType,
  [in]  _In_NLS_string_(cchSrc)LPCWCH lpSrcStr,
  [in]  int                           cchSrc,
  [out] LPWORD                        lpCharType
);

GetCPInfo-BOOL GetCPInfo(
  [in]  UINT     CodePage,
  [out] LPCPINFO lpCPInfo
);

UnhandledExceptionFilter-LONG UnhandledExceptionFilter(
  [in] _EXCEPTION_POINTERS *ExceptionInfo
);

SetUnhandledExceptionFilter-LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter(
  [in] LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter
);

GetCurrentProcess-HANDLE GetCurrentProcess();

TerminateProcess-BOOL TerminateProcess(
  [in] HANDLE hProcess,
  [in] UINT   uExitCode
);

IsProcessorFeaturePresent-BOOL IsProcessorFeaturePresent(
  [in] DWORD ProcessorFeature
);

QueryPerformanceCounter-BOOL QueryPerformanceCounter(
  [out] LARGE_INTEGER *lpPerformanceCount
);

GetCurrentProcessId-DWORD GetCurrentProcessId();

InitializeSListHead-void InitializeSListHead(
  [in, out] PSLIST_HEADER ListHead
);

IsDebuggerPresent-BOOL IsDebuggerPresent();

GetStartupInfoW-void GetStartupInfoW(
  [out] LPSTARTUPINFOW lpStartupInfo
);

RaiseException-void RaiseException(
  [in] DWORD           dwExceptionCode,
  [in] DWORD           dwExceptionFlags,
  [in] DWORD           nNumberOfArguments,
  [in] const ULONG_PTR *lpArguments
);

RtlUnwind-NTSYSAPI VOID RtlUnwind(
  [in, optional] PVOID             TargetFrame,
  [in, optional] PVOID             TargetIp,
  [in, optional] PEXCEPTION_RECORD ExceptionRecord,
  [in]           PVOID             ReturnValue
);

FreeLibrary-BOOL FreeLibrary(
  [in] HMODULE hLibModule
);

LoadLibraryExW-HMODULE LoadLibraryExW(
  [in] LPCWSTR lpLibFileName,
       HANDLE  hFile,
  [in] DWORD   dwFlags
);

GetModuleHandleExW-BOOL GetModuleHandleExW(
  [in]           DWORD   dwFlags,
  [in, optional] LPCWSTR lpModuleName,
  [out]          HMODULE *phModule
);

GetCommandLineA-LPSTR GetCommandLineA();

GetCommandLineW-LPWSTR GetCommandLineW();

IsValidLocale-BOOL IsValidLocale(
  [in] LCID  Locale,
  [in] DWORD dwFlags
);

GetUserDefaultLCID-LCID GetUserDefaultLCID();

EnumSystemLocalesW-BOOL EnumSystemLocalesA(
  [in] LOCALE_ENUMPROCA lpLocaleEnumProc,
  [in] DWORD            dwFlags
);

FlushFileBuffers-BOOL FlushFileBuffers(
  [in] HANDLE hFile
);

GetConsoleCP-UINT WINAPI GetConsoleCP(void);

GetConsoleMode-BOOL WINAPI GetConsoleMode(
  _In_  HANDLE  hConsoleHandle,
  _Out_ LPDWORD lpMode
);

GetFileSizeEx-BOOL GetFileSizeEx(
  [in]  HANDLE         hFile,
  [out] PLARGE_INTEGER lpFileSize
);

ReadConsoleW-BOOL WINAPI ReadConsole(
  _In_     HANDLE  hConsoleInput,
  _Out_    LPVOID  lpBuffer,
  _In_     DWORD   nNumberOfCharsToRead,
  _Out_    LPDWORD lpNumberOfCharsRead,
  _In_opt_ LPVOID  pInputControl
);

HeapReAlloc-DECLSPEC_ALLOCATOR LPVOID HeapReAlloc(
  [in] HANDLE                 hHeap,
  [in] DWORD                  dwFlags,
  [in] _Frees_ptr_opt_ LPVOID lpMem,
  [in] SIZE_T                 dwBytes
);

FindClose-BOOL FindClose(
  [in, out] HANDLE hFindFile
);

FindFirstFileExW-HANDLE FindFirstFileExW(
  [in]  LPCWSTR            lpFileName,
  [in]  FINDEX_INFO_LEVELS fInfoLevelId,
  [out] LPVOID             lpFindFileData,
  [in]  FINDEX_SEARCH_OPS  fSearchOp,
        LPVOID             lpSearchFilter,
  [in]  DWORD              dwAdditionalFlags
);

FindNextFileW-BOOL FindNextFileW(
  [in]  HANDLE             hFindFile,
  [out] LPWIN32_FIND_DATAW lpFindFileData
);

IsValidCodePage-BOOL IsValidCodePage(
  [in] UINT CodePage
);

GetACP-UINT GetACP();

GetOEMCP-UINT GetOEMCP();

GetEnvironmentStringsW-LPWCH GetEnvironmentStringsW();

FreeEnvironmentStringsW-BOOL FreeEnvironmentStringsA(
  LPCH penv
);

SetEnvironmentVariableW-BOOL SetEnvironmentVariableW(
  [in]           LPCWSTR lpName,
  [in, optional] LPCWSTR lpValue
);

SetStdHandle-BOOL WINAPI SetStdHandle(
  _In_ DWORD  nStdHandle,
  _In_ HANDLE hHandle
);

GetProcessHeap-HANDLE GetProcessHeap();

HeapSize-SIZE_T HeapSize(
  [in] HANDLE  hHeap,
  [in] DWORD   dwFlags,
  [in] LPCVOID lpMem
);

WriteConsoleW-BOOL WINAPI WriteConsole(
  _In_             HANDLE  hConsoleOutput,
  _In_       const VOID    *lpBuffer,
  _In_             DWORD   nNumberOfCharsToWrite,
  _Out_opt_        LPDWORD lpNumberOfCharsWritten,
  _Reserved_       LPVOID  lpReserved
);

lstrcmpA-int lstrcmpA(
  [in] LPCSTR lpString1,
  [in] LPCSTR lpString2
);

InitializeCriticalSectionEx-BOOL InitializeCriticalSectionEx(
  [out] LPCRITICAL_SECTION lpCriticalSection,
  [in]  DWORD              dwSpinCount,
  [in]  DWORD              Flags
);

LCMapStringEx-int LCMapStringEx(
  [in, optional]  LPCWSTR          lpLocaleName,
  [in]            DWORD            dwMapFlags,
  [in]            LPCWSTR          lpSrcStr,
  [in]            int              cchSrc,
  [out, optional] LPWSTR           lpDestStr,
  [in]            int              cchDest,
  [in, optional]  LPNLSVERSIONINFO lpVersionInformation,
  [in, optional]  LPVOID           lpReserved,
  [in, optional]  LPARAM           sortHandle
);

GetExitCodeProcess-BOOL GetExitCodeProcess(
  [in]  HANDLE  hProcess,
  [out] LPDWORD lpExitCode
);

GetFileAttributesExW-BOOL GetFileAttributesExW(
  [in]  LPCWSTR                lpFileName,
  [in]  GET_FILEEX_INFO_LEVELS fInfoLevelId,
  [out] LPVOID                 lpFileInformation
);

GetConsoleOutputCP-UINT WINAPI GetConsoleOutputCP(void);

SetEndOfFile-BOOL SetEndOfFile(
  [in] HANDLE hFile
);

RtlCaptureContext-NTSYSAPI VOID RtlCaptureContext(
  [out] PCONTEXT ContextRecord
);

ReleaseMutex-BOOL ReleaseMutex(
  [in] HANDLE hMutex
);

GetCurrentDirectoryW-DWORD GetCurrentDirectory(
  [in]  DWORD  nBufferLength,
  [out] LPTSTR lpBuffer
);

GetEnvironmentVariableW-DWORD GetEnvironmentVariableW(
  [in, optional]  LPCWSTR lpName,
  [out, optional] LPWSTR  lpBuffer,
  [in]            DWORD   nSize
);

AddVectoredExceptionHandler-PVOID AddVectoredExceptionHandler(
  ULONG                       First,
  PVECTORED_EXCEPTION_HANDLER Handler
);

SetThreadStackGuarantee-BOOL SetThreadStackGuarantee(
  [in, out] PULONG StackSizeInBytes
);

InitializeCriticalSection-void InitializeCriticalSection(
  [out] LPCRITICAL_SECTION lpCriticalSection
);

WaitForSingleObjectEx-DWORD WaitForSingleObjectEx(
  [in] HANDLE hHandle,
  [in] DWORD  dwMilliseconds,
  [in] BOOL   bAlertable
);

LoadLibraryA-HMODULE LoadLibraryA(
  [in] LPCSTR lpLibFileName
);

CreateMutexA-HANDLE CreateMutexA(
  [in, optional] LPSECURITY_ATTRIBUTES lpMutexAttributes,
  [in]           BOOL                  bInitialOwner,
  [in, optional] LPCSTR                lpName
);

GetFileInformationByHandle-BOOL GetFileInformationByHandle(
  [in]  HANDLE                       hFile,
  [out] LPBY_HANDLE_FILE_INFORMATION lpFileInformation
);

DeviceIoControl-BOOL DeviceIoControl(
  [in]                HANDLE       hDevice,
  [in]                DWORD        dwIoControlCode,
  [in, optional]      LPVOID       lpInBuffer,
  [in]                DWORD        nInBufferSize,
  [out, optional]     LPVOID       lpOutBuffer,
  [in]                DWORD        nOutBufferSize,
  [out, optional]     LPDWORD      lpBytesReturned,
  [in, out, optional] LPOVERLAPPED lpOverlapped
);

FormatMessageW-DWORD FormatMessageW(
  [in]           DWORD   dwFlags,
  [in, optional] LPCVOID lpSource,
  [in]           DWORD   dwMessageId,
  [in]           DWORD   dwLanguageId,
  [out]          LPWSTR  lpBuffer,
  [in]           DWORD   nSize,
  [in, optional] va_list *Arguments
);

GetFullPathNameW-DWORD GetFullPathNameW(
  [in]  LPCWSTR lpFileName,
  [in]  DWORD   nBufferLength,
  [out] LPWSTR  lpBuffer,
  [out] LPWSTR  *lpFilePart
);

GetModuleHandleA-HMODULE GetModuleHandleA(
  [in, optional] LPCSTR lpModuleName
);

_register_thread_local_exe_atexit_callback-int atexit(
   void (__cdecl *func )( void )
);

_initterm_e-void __cdecl _initterm(
   PVFV *,
   PVFV *
);

int __cdecl _initterm_e(
   PVFV *,
   PVFV *
);

_initterm-void __cdecl _initterm(
   PVFV *,
   PVFV *
);

int __cdecl _initterm_e(
   PVFV *,
   PVFV *
);

_crt_atexit-int atexit(
   void (__cdecl *func )( void )
);

_controlfp_s-errno_t _controlfp_s(
    unsigned int *currentControl,
    unsigned int newControl,
    unsigned int mask
);

_set_app_type-typedef enum _crt_app_type
{
    _crt_unknown_app,
    _crt_console_app,
    _crt_gui_app
} _crt_app_type;

void __cdecl _set_app_type(
    _crt_app_type appType
    );

__setusermatherr-void __setusermatherr(
   _HANDLE_MATH_ERROR pf
   )

_set_fmode-errno_t _set_fmode(
   int mode
);

_configthreadlocale-int _configthreadlocale( int per_thread_locale_type );

free-void free(
   void *memblock
);

